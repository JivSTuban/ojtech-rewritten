CEBU INSTITUTE OF TECHNOLOGY
UNIVERSITY


 
  

College of Computer Studies


Software Project Proposal for OJTech: AI-Powered OJT Job Matching Portal
Developers
Tuban, Jiv S.
Vitorillo, Aldrin John A.
Sumalpong, Lanz Roy L.
Cadayona, Ben David C.
Yu, Kris Jan Melvin D.
Adviser: Tulin, Jasmine A.
 
Consultation Schedule: Thursday, 11:00 AM – 12:00 PM 
Date of Submission: February 22, 2025 


3. Executive Summary
OJTech is an AI-driven On-the-Job Training (OJT) Management Portal with Job Matching, developed for the College of Computer Studies at Cebu Institute of Technology University. The platform connects Computer Studies students with relevant job opportunities using advanced technologies and a modular, scalable architecture. It streamlines OJT placement, automates skills matching, and provides real-time tracking for students and employers. The AI-powered job matching is implemented, but the specific use of the Gemini API for resume generation is not confirmed in the current implementation.
4. Background and Problem Statement
Students often struggle to find enough time to search, apply, and secure suitable job opportunities during their OJT period. Manual application processes and limited access to personalized recommendations cause delays and missed chances. Additionally, students often lack the tools to create professional, ATS-optimized resumes that effectively showcase their skills and experiences, further hindering their employability. Existing platforms fail to offer efficient job-matching, timely updates, and advanced resume-building capabilities. OJTech solves these challenges by automating applications, providing AI-driven personalized job recommendations, and offering AI-powered resume generation through the Gemini API to create professionally formatted, ATS-optimized resumes that improve placement success.
4.1 Current OJT Management Challenges        
The current OJT management process at the College of Computer Studies faces several challenges:
1. Manual Matching Process: Traditional OJT placement relies on manual matching of students to employers, leading to inefficient placements and skills mismatches.
2. Limited Resume Optimization: Students lack guidance on improving their resumes for specific job opportunities, hindering their employability.
3. Absence of Data-Driven Insights: The current system offers limited analytics on placement trends, employer preferences, and student outcomes.
4.2 Limitations of Existing Solutions
Existing OJT management platforms have significant limitations:
* Lack of AI-powered job matching capabilities
* Absence of resume analysis and optimization features
* Limited integration with modern authentication systems
* Inadequate real-time tracking and notification systems
* Poor user experience and mobile responsiveness
5. Project Objectives
5.1 Main Objectives (SMART Goals)
1. Implement AI-Driven Job Matching
        An AI-powered job matching system is implemented, but further details on the specific AI technologies used are needed.
2. Streamline OJT Management Process
        Reduce administrative workload by 70% by automating application tracking, placement, and reporting processes by the end of the project implementation.
3. Enhance Student Employability
        Improve student resume quality and job readiness through AI-powered resume optimization, targeting a 50% increase in successful placements within six months of launch.
5.2 Specific Objectives (Key Deliverables)
Module 1: User Portals & Role-Based Access Control
   * Create separate, easy-to-use portals for Students, Employers, and Administrators, each with a modern, mobile-friendly interface that adapts to different screen sizes.
   * Implement secure access control that ensures users can only access the information and features relevant to their role (student, employer, or administrator).
   * Provide convenient login options using existing GitHub and Gmail accounts, eliminating the need to remember additional passwords while maintaining security.
   * Design an attractive, consistent visual experience across all portals with intuitive navigation and responsive layouts that work well on both computers and mobile devices.

________________

Module 2: CV Management and AI-Powered Job Matching
   * Allow students to easily create comprehensive profiles by filling out straightforward forms with their personal information, education, skills, work experience, certifications, and GitHub projects.
   * Use advanced AI technology (Google Gemini) to automatically generate professional, ATS-optimized resumes that highlight students' strengths and are tailored to increase their chances of getting interviews.
   * Create visually appealing, downloadable resumes with proper formatting, action verbs, and quantifiable achievements that can be saved as PDFs for applications.
   * Securely store all student profile information and generated resumes in a database for easy access and updates.
   * Provide students with personalized job recommendations that match their skills and experience, displayed directly in their portal.

________________

Module 3: Job Postings and Application Tracking
   * Enable employers to easily post and manage job or internship opportunities through simple, user-friendly forms in their dedicated portal.
   * Store all job posting information securely and make it searchable for qualified students.
   * Allow students to browse available job opportunities and submit applications directly through the platform.
   * Provide a tracking system for students to monitor the status of their applications.
   * Give employers tools to review applications and manage the hiring process efficiently.

________________

Module 4: Admin Dashboard & System Management
   * Build an administrative dashboard that allows program coordinators to:
      * Manage all user accounts with options to add, edit, or deactivate students, employers, and other administrators.
      * Monitor OJT placements and overall system activity.
      * Access basic system statistics and user information.
   * Create a robust technical foundation with secure authentication and data storage.
   * Ensure system reliability and security through industry-standard security practices.

   * Implement a comprehensive job matching process that leverages both traditional skill matching and advanced AI techniques.
   * Use the `JobMatchService` to find matches for students based on their profiles and active jobs.
   * Calculate match scores using direct skill matches, related matches, and AI-enhanced analysis via the Gemini API.
   * Consider special cases, such as having Java, Spring Boot, and React skills, to ensure a minimum match score.
   * Provide detailed match explanations and store analysis results as JSON strings in job match records.

   * Provide convenient login options using existing GitHub and Gmail accounts, as well as a manual login option for users who prefer traditional authentication methods.

5.3 Documentation
5.3.1 Required Technical Documents
To ensure the OJTech On-the-Job Training (OJT) Management Portal with Job Matching is well-documented for development, deployment, and evaluation, the following technical documents will be produced:
5.3.1.1 Software Requirements Specification (SRS)
                     * Purpose: Detail the functional and non-functional requirements of OJTech.
                     * Content: Includes user requirements (e.g., student CV management, employer job postings, admin analytics), system requirements (e.g., 20 concurrent users, OAuth 2.0 authentication), and performance expectations (e.g., API response time under 500 ms).
                     * Outcome: Provides a clear blueprint for developers and stakeholders at Cebu Institute of Technology University College of Computer Studies.
5.3.1.2 Software Design Description (SDD)
                     * Purpose: Describe the system's architecture, modules, and design decisions.
                     * Content: Outlines the client-server architecture (React.tsx frontend on Vercel, Spring Boot backend on DigitalOcean), four modules (user portals, CV management, job postings, admin dashboard), and design choices (e.g., MySQL for data storage, Gemini API for AI job matching).
                     * Outcome: Guides implementation and ensures alignment with technical requirements.
5.3.1.3 Software Project Management Plan (SPMP)
                     * Purpose: Define the project timeline, milestones, and resource allocation.
                     * Content: Details the Agile methodology with two-week sprints, milestones (e.g., prototype completion, testing phases), and resources (e.g., developer workstations, DigitalOcean hosting). Includes a Gantt chart for a 4-6 month timeline.
                     * Outcome: Ensures timely delivery within Cebu Institute of Technology University academic semester constraints.
5.3.1.4 Software Test Document
                     * Purpose: Document test cases, scenarios, and results to validate system functionality.
                     * Content: Includes unit tests (Jest, JUnit), integration tests (Postman, Selenium), performance tests (JMeter for 20 users), and security tests (OWASP ZAP). Records outcomes for features like AI job matching and RBAC.
                     * Outcome: Verifies system reliability and compliance with requirements.
5.3.2 Usability Testing and User Survey
5.3.2.1 Conduct Usability Testing
                     * Purpose: Measure the system's usefulness and effectiveness through real user interactions.
                     * Approach: Engage 9 users (3 students, 3 employers, 3 administrators) in structured testing sessions to evaluate interface intuitiveness and functionality (e.g., CV generation form, job posting navigation). Use task completion rates and time-on-task metrics.
                     * Outcome: Ensures OJTech is user-friendly for Cebu Institute of Technology University OJT stakeholders.
5.3.2.2 Collect User Feedback
                     * Purpose: Gather insights to refine the system before full deployment.
                     * Approach: Distribute surveys to usability testing participants and an additional 10 stakeholders (5 students, 3 employers, 2 administrators), focusing on satisfaction, ease of use, and feature relevance. Analyze feedback to prioritize improvements (e.g., UI adjustments).
                     * Outcome: Enhances system usability and aligns with user needs.
5.3.3 Final Paper (ACM Format)
5.3.3.1 Summarize Project Results and Discussions
                     * Purpose: Document the project's outcomes and contributions in a standardized academic format.
                     * Content: Follows the ACM (Association for Computing Machinery) format, including abstract, introduction, methodology (Agile, React.tsx, Spring Boot), results (e.g., 80% user adoption, 70% placement success), and discussion of impact on Cebu Institute of Technology University OJT program and industry partners (e.g., Alliance Software, Kyocera).
                     * Outcome: Provides a scholarly record of OJTech's development and effectiveness, meeting academic and industry standards.
These objectives ensure comprehensive documentation, user-validated functionality, and a rigorous academic deliverable, supporting the successful implementation of OJTech at Cebu Institute of Technology University.




6. Scope and Limitations
6.1 Features and Functionalities Included
                     * User Portals with Role-Based Access Control:
                     * Dedicated portals for students, employers, and administrators, styled with Tailwind CSS for responsive design.
                     * Role-based access control (RBAC) is likely implemented, but specific details need confirmation.
                     * OAuth 2.0 authentication is implemented, with support for GitHub and Gmail.
                     * CV Management and AI-Powered Job Matching:
                     * Students complete a form with personal information (first name, last name), educational background (university, major, graduation year), skills (technical and soft), certifications (name, issuing organization, dates), work experience (job title, company, dates, description), contact information (phone, LinkedIn, GitHub, portfolio), and GitHub project details (URLs, descriptions, technologies) through the React.tsx portal. The Gemini API generates tailored CVs from this data, with extracted skills stored in a MySQL database.
                     * AI-driven job matching uses generated CVs to deliver personalized job recommendations displayed on the student portal.
                     * Job Postings and Application Tracking:
                     * Employers create and manage job postings via a React.tsx portal, with data handled by Spring Boot APIs.
                     * Allow students to browse available job opportunities and submit applications directly through the platform.
                     * Provide a tracking system for students to monitor the status of their applications.
                     * Give employers tools to review applications and manage the hiring process efficiently.
                     * Admin Dashboard and System Management:
                     * Administrators manage users, monitor placements, and generate reports on placement success and system usage through a React.tsx dashboard.
                     * Backend APIs support user management and analytics, with data stored in MySQL.
These features enable efficient OJT placement, enhance user experience, and support Cebu Institute of Technology University academic and industry partnerships with companies like Alliance Software and Kyocera.
6.2 Constraints and Exclusions
The OJTech project operates within specific constraints and exclusions due to its scope as a capstone project and the resources available at Cebu Institute of Technology University:
                     * Budget Constraints:
                     * Limited funding restricts access to premium AI services or high-tier cloud hosting plans. The project relies on cost-effective platforms (DigitalOcean, Vercel) and free-tier API services (e.g., Gemini API), potentially limiting advanced AI capabilities or storage capacity.
                     * No budget is allocated for dedicated hardware; development uses existing personal workstations.
                     * Timeline Constraints:
                     * The project must be completed within one academic semester (approximately 4-6 months), limiting the scope to core functionalities and excluding features advanced analytics (e.g., predictive placement trends).
                     * Iterative Agile sprints (two-week cycles) prioritize essential modules, deferring non-critical enhancements.
                     * Technical Constraints:
                     * The system is designed for 20 concurrent users, insufficient for large-scale deployment beyond Cebu Institute of Technology University OJT program without infrastructure upgrades.
                     * Dependence on external APIs (e.g., Gemini, OAuth providers) introduces risks of service outages or rate limits, mitigated by caching but not fully eliminated.
                     * The platform is web-based only, excluding native mobile or desktop applications due to development complexity.
                     * Exclusions:
                     * Integration with external job boards or social media platforms for broader job posting visibility is excluded to focus on Cebu Institute of Technology University OJT partners.
                     * Advanced security features like multi-factor authentication or real-time intrusion detection are omitted due to resource constraints.
                     * Support for non-Computer Studies students or international OJT placements is outside the project scope.
These constraints ensure the project remains feasible while delivering a functional, impactful solution for Cebu Institute of Technology University OJT program.


 7. Proposed Solution and Methodology
7.1 Overview of the Software
OJTech employs a client-server architecture with a React.tsx frontend for responsive user interfaces and a Spring Boot backend for robust API-driven logic. A relational database, managed via JPA/Hibernate, ensures data persistence, while AI services (e.g., Gemini API) power intelligent job and candidate matching. The system is organized into four modules:
                     1. User Portals and Role-Based Access Control: Separate portals for students, employers, and administrators, built with React.tsx and Tailwind CSS. Role-based access control (RBAC) and OAuth 2.0 authentication (via GitHub, Gmail) with JSON Web Tokens (JWT) ensure secure access.
                     2. CV Management and AI-Powered Job Matching: Students complete a form with personal information, educational background, skills, certifications, work experience, contact details, and GitHub project details through the React.tsx portal. AI-driven skill extraction and CV generation are delivered via Spring Boot APIs, with job matching based on generated CVs.
                     3. Job Postings and Application Tracking: Employers create job postings and receive AI-generated candidate recommendations, accessible via a React.tsx dashboard.
                     4. Admin Dashboard and System Management: An admin dashboard for user management and analytics, supported by a scalable Spring Boot backend with RESTful APIs and security features.
The workflow involves users accessing role-specific portals, authenticating via OAuth, and interacting with AI-powered features. The backend processes requests, integrates AI outputs, and stores data, while the frontend dynamically displays results. OJTech optimizes the OJT process by automating matching and providing real-time tracking.




7.2 Technologies and Platforms
7.2.1 Frontend Development
                     * React.tsx – A JavaScript library for building user interfaces; supports both client-side and server-side rendering, ma        making it suitable for dynamic and static site generation.
                     * shadcn/ui – A customizable component library built on top of Radix UI and Tailwind CSS, offering pre-designed, accessible UI elements with consistent styling.
                     * Tailwind CSS – A utility-first CSS framework that enables rapid and responsive design directly in your markup through predefined utility classes.
7.2.2 Backend Services 
                     * Spring Boot - as the backend framework for building RESTful APIs and handling business logic.

                     * MySQL -for reliable, scalable, and relational data storage.

                     * Spring Security with OAuth2:

                        * OAuth login using GitHub and Google for secure authentication.

                        * Role-Based Access Control using JWT for stateless session management.


                           * WebSocket Support:

                              * Enables real-time updates (e.g., notifications for job matches, interview invites, etc.).

                                 * Modular and Scalable Architecture:

                                    * Clean separation of concerns via layered architecture (Controller → Service → Repository).

                                    * Prepared for future integration of AI tools, analytics, and third-party services.

                                       * Monitoring, Logging, and Security Best Practices:

                                          * Integrated with tools like Spring Actuator, Logback, and JWT validation filters for enhanced security and observability.






7.2.3 AI Integration
                                          * AI Integration:
                                          * Job matching algorithms are implemented, but the use of the Gemini API for resume analysis and optimization is not confirmed.
7.2.4 Development Tools
                                          * Git/GitHub: For version control and collaborative development
                                          * ClickUp: For agile project management and task tracking
                                          * DigitalOcean: For backend deployment and hosting of Spring Boot services
                                          * Cloudinary: For secure and optimized file storage (e.g.,Image,Logo)
                                          * MySQL: As the primary relational database for data storage
7.2.5 Security Implementations
                                          * OAuth 2.0: Secure authentication protocol
                                          * Role-based access control: Permission management
                                          * Data encryption: For sensitive user information
                                          * HTTPS: Secure data transmission
7.3 Development Approach
The development of the OJTech On-the-Job Training (OJT) Management Portal with Job Matching will follow the Agile Software Development Life Cycle (SDLC), chosen for its flexibility, iterative progress, and emphasis on stakeholder collaboration. Agile enables the development team to adapt to evolving requirements, incorporate feedback from Cebu Institute of Technology University College of Computer Studies, and deliver a high-quality platform tailored to the needs of students, employers, and administrators.
The Agile methodology will be implemented through the following phases, executed in two-week sprints:
                                          1. Planning and Requirements Gathering:
                                          * Conduct stakeholder with students, OJT coordinators, and partnered companies (e.g., Alliance Software, Kyocera) to define functional (e.g., AI job matching) and non-functional (e.g., security) requirements.
                                          * Create a product backlog with prioritized user stories.
                                          * Deliverables: Requirements document, sprint backlog.
                                          2. System Design:
                                          * Develop system architecture, API specifications, and database schemas for the React.tsx frontend and Spring Boot backend.
                                          * Design user interfaces using wireframes.
                                          * Deliverables: Architecture diagram, UI mockups.
                                          3. Iterative Development:
                                          * Implement modules (user portals, CV management, job postings, admin dashboard) incrementally across sprints.
                                          * Develop frontend on Vercel and backend on DigitalOcean, integrating Gemini API for AI features.
                                          * Conduct unit and integration testing within each sprint.
                                          * Deliverables: Functional prototypes, test reports.
                                          4. Testing and Feedback:
                                          * Perform usability, performance, and security testing for 20 concurrent users, refining features based on user feedback.
                                          * Conduct sprint reviews with stakeholders to ensure alignment.
                                          * Deliverables: Test plans, feedback summaries.
                                          5. Deployment and Maintenance:

                                             * Deploy the system on DigitalOcean (backend) and Vercel (frontend), with monitoring tools for performance tracking.
                                             * Provide user training and establish a maintenance plan for updates.
                                             * Deliverables: Deployed system, user manuals, maintenance schedule.
Agile's iterative approach ensures continuous improvement, stakeholder engagement, and a robust platform that enhances CITU's OJT program.


8. Target Users, Customers, Beneficiaries, and Partners
8.1 Intended Users
The OJTech On-the-Job Training (OJT) Management Portal with Job Matching targets three primary user groups within the College of Computer Studies at Cebu Institute of Technology University (CITU):
                                             * Students:
                                             * Undergraduate Computer Studies students participating in OJT programs to fulfill academic requirements and gain industry experience.
                                             * They use the platform to generate CVs via a form (including personal information, educational background, skills, certifications, work experience, contact details, and GitHub projects), access AI-recommended job opportunities, and track OJT progress.
                                             * Employers:
                                             * Technology companies and organizations in Cebu seeking interns or entry-level employees for IT-related roles.
                                             * Employers post job listings, review AI-matched candidates, and manage applications via the portal.
                                             * Administrators:
                                             * OJT coordinators, faculty, or administrative staff overseeing the OJT program within the College of Computer Studies.
                                             * They manage user accounts, monitor placements, and generate analytics to ensure program success.
8.2 How the Solution Benefits Them
OJTech delivers specific benefits to each user group, addressing inefficiencies in traditional OJT processes through automation and user-centric design.
                                             1. Students:
                                             * Tailored Opportunities: AI-driven job matching aligns placements with students' skills, enhancing career relevance.
                                             * Efficient CV Management: Tools for completing a form to generate and optimize CVs streamline the application process.


                                             * Progress Visibility: Real-time tracking of application status reduces uncertainty.
                                             * Accessibility: A responsive interface supports use across devices.
                                             2. Employers:
                                             * Streamlined Recruitment: AI recommendations match candidates to job requirements, saving time.
                                             * Centralized Management: A dedicated portal simplifies job posting and application tracking.
                                             * Informed Hiring: Candidate profiles and analytics support better decisions.
                                             * Scalability: The platform accommodates organizations of all sizes.
                                             3. Administrators:
                                             * Program Oversight: The admin dashboard enables user and placement management.
                                             * Actionable Insights: Analytics inform program improvements.
                                             * Reduced Workload: Automation minimizes manual coordination.
                                             * Reliability: A secure, scalable system ensures consistent performance.
8.3 Potential Partners or Stakeholders Involved
The implementation of OJTech relies on collaboration with companies that have signed Memorandum of Agreement (MOA) for the College of Computer Studies at Cebu Institute of Technology University OJT program, formalizing their commitment to provide internship opportunities for Computer Studies students. These partners, primarily technology-focused firms in Cebu, contribute job postings and support OJTech's mission to bridge academia and industry. Below are key partners with active MOAs, as per the provided list:
                                             1. Alliance Software, Inc.:
                                             * A software development company located at Cebu Business Park, offering internships in software engineering and IT solutions.
                                             * Contact: Ms. Ma. Giselle G. Mabunga, Sr. HR Specialist (mmabunga@asi-dev.com).
                                             * Their OJT program supports OJTech's job-matching features by providing roles aligned with student skills.
                                             2. CodeChum Software Solutions Incorporated:
                                             * A Cebu-based firm specializing in software development, located in Tisa, Cebu City.
                                             * Contact: Mr. Jemar Jude A. Maranga, CEO (jude@codechum.com).
                                             * Offers internships in web and mobile app development, contributing to OJTech's AI-driven recommendations.
                                             3. Kyocera Document Solutions Development Philippines, Inc.:
                                             * A technology company at Cebu IT Park, focusing on document management software.
                                             * Contact: Mr. Michichiro Okada, President (sheryl.Cedeno@ddp.kyocera.com).
                                             * Valid until June 15, 2025, their OJT program provides roles in software testing and development, enhancing OJTech's job posting ecosystem.
                                             4. Symph, Inc.:
                                             * A software development firm at Cebu IT Park, offering internships in full-stack development.
                                             * Contact: Ms. Lincoln Lamthai B. Lim, Internship Coordinator (link@symph.com).
                                             * Their participation ensures a steady supply of technical internships for OJTech's matching system.
                                             5. Talleco.com Inc.:
                                             * An IT company at Cebu IT Tower, providing opportunities in software and system administration.
                                             * Contact: Ms. Ma. Ana S. Dinoy, HR & Admin Manager (j.remulta@jobtarget.com).
                                             * Their OJT roles support OJTech's employer portal by offering diverse job postings.
These companies, with active MOAs, commit to mentoring students, assigning projects, and evaluating performance, as outlined in their agreements with College of Computer Studies at Cebu Institute of Technology University. Additional stakeholders include Cebu Institute of Technology University, College of Computer Studies, which provides academic oversight, and industry associations like the Cebu IT-BPM Organization (CIB.O), which may promote OJTech to expand its network of OJT partners. These collaborations ensure OJTech effectively connects students with industry-relevant opportunities.
9. Technical Requirements
9.1 Hardware and Software Needs
The OJTech OJT Management Portal requires specific hardware and software for both development and deployment, supporting its client-server architecture and AI-driven features.
Development Environment
                                             * Hardware:
                                             * Developer workstations: 3-5 laptops/desktops with Intel Core i5, 16 GB RAM, 256GB SSD, running Windows 10/11 or Linux.
                                             * Local testing server: Virtual machine with 8 GB RAM, 4-core CPU, 100 GB storage.
                                             * Software:
                                             * IDEs: Visual Studio Code (frontend), IntelliJ IDEA (backend).
                                             * Version Control: Git with GitHub.
                                             * Frontend: Node.js (v18.x), npm, React.tsx, Tailwind CSS, Axios.
                                             * Backend: JDK 17, Spring Boot, Maven, Spring Security, JPA/Hibernate.
                                             * Database: MySQL 8.0 with MySQL Workbench.
                                             * Tools: Postman (API testing), Docker (containerization), Gemini API (AI integration).
Deployment Environment
                                             * Hardware:
                                             * Backend: DigitalOcean Droplet with 2 GB RAM, 2 vCPUs, 80 GB SSD to host Spring Boot and MySQL, sufficient for 20 concurrent users.
                                             * Frontend: Vercel platform for hosting React.tsx frontend, leveraging serverless infrastructure.
                                             * User Devices: PCs or smartphones with modern browsers and 2 Mbps internet.
                                             * Software:
                                             * Backend OS: Ubuntu 20.04 LTS on DigitalOcean.
                                             * Web Server: Nginx for backend HTTP requests.
                                             * Backend: Spring Boot with Tomcat, Spring Security for OAuth 2.0 (GitHub, Gmail), JWT.
                                             * Database: MySQL 8.0 on DigitalOcean's managed database service.
                                             * Frontend: React.tsx on Vercel with Tailwind CSS, React Router.
                                             * Monitoring: Log4j (backend), Vercel Analytics (frontend).
                                             * Security: SSL/TLS certificates via Let's Encrypt for DigitalOcean and Vercel's HTTPS.
9.2 Security and Infrastructure Considerations
OJTech ensures security, data protection, and scalability to deliver a reliable platform.
Security
                                             * Authentication: OAuth 2.0 (GitHub, Gmail) via Spring Security, with JWT for secure sessions.
                                             * Authorization: Role-based access control (RBAC) on frontend (React.tsx) and backend (Spring Boot).
                                             * Data Protection: AES encryption for data at rest, TLS 1.3 for data in transit, input validation to prevent SQL injection and XSS.
                                             * API Security: CORS policies, rate limiting, secure API key storage.
                                             * Compliance: Adheres to the Philippines' Data Privacy Act of 2012 with user consent and data deletion.
Infrastructure and Scalability
                                             * Architecture: Modular Spring Boot backend and React.tsx frontend for maintainability.
                                             * Deployment: DigitalOcean for backend with scaling options; Vercel for frontend with serverless scaling.
                                             * Availability: 99.9% uptime via DigitalOcean's infrastructure and Vercel's CDN.
                                             * Monitoring: DigitalOcean Monitoring for backend, Vercel Analytics for frontend usage.
                                             * Scalability: Database indexing optimizes performance for 20 users; AI integration with caching ensures reliability.        


10. Evaluation and Success Metrics
10.1 Key Performance Indicators (KPIs)
The success of the OJTech OJT Management Portal will be measured through Key Performance Indicators (KPIs) that evaluate system performance, user engagement, and alignment with Cebu Institute of Technology University OJT program objectives for 20 concurrent users:
                                             * System Uptime: Achieve 99.9% uptime to ensure reliable access, monitored via DigitalOcean and Vercel analytics.
                                             * API Response Time: Maintain average API response times under 500 milliseconds for key operations (e.g., job matching, CV generation), measured using DigitalOcean Monitoring.
                                             * User Adoption Rate: Attain 80% adoption among CITU Computer Studies OJT students (approximately 80-120 students) and 50% of partnered companies (e.g., Alliance Software, Kyocera) within six months, tracked via user registrations.
                                             * Job Matching Accuracy: Achieve 75% student satisfaction with AI-driven job recommendations, assessed through post-placement surveys on opportunity relevance.
                                             * Placement Success Rate: Secure OJT placements for 70% of registered students within one semester, verified by administrator reports.These KPIs ensure OJTech meets technical reliability and programmatic goals for a smaller user base.
10.2 Testing and Validation Strategies
Comprehensive testing and validation strategies, aligned with the Agile methodology, will ensure OJTech functions as intended for 20 concurrent users.
                                             * Unit Testing:
                                             * Test components (e.g., React.tsx form inputs, Spring Boot APIs) using Jest and JUnit, targeting 80% code coverage.
                                             * Example: Verify AI-generated CVs accurately reflect form inputs (e.g., GitHub project technologies, skills).
                                             * Integration Testing:
                                             * Validate frontend-backend-AI service interactions (e.g., Gemini API, OAuth) using Postman for end-to-end tests.
                                             * Example: Ensure job recommendations display correctly on the student portal.
                                             * Usability Testing:
                                             * Conduct sessions with 9 users (3 students, 3 employers, 3 administrators) to evaluate interface intuitiveness, refining the React.tsx frontend based on feedback.
                                             * Example: Assess job posting navigation in the employer portal.
                                             * Performance Testing:
                                             * Simulate 20 concurrent users with JMeter to ensure DigitalOcean backend maintains API response times under 500 ms and Vercel frontend delivers pages in under 2 seconds.
                                             * Example: Test job matching API under load.
                                             * Security Testing:
                                             * Use OWASP ZAP to validate protections against SQL injection, XSS, and unauthorized access via OAuth and JWT.
                                             * Example: Confirm RBAC restricts admin feature access.
                                             * User Acceptance Testing (UAT):
                                             * Engage 12 stakeholders (6 students, 3 employers, 3 administrators) post-deployment to confirm functionality (e.g., CV management) through test scenarios.
                                             * Example: Verify employers see AI-recommended candidates.
                                             * Post-Deployment Validation:
                                             * Monitor KPIs (e.g., uptime) using DigitalOcean Monitoring and Vercel Analytics for one month, addressing issues via patches.
                                             * Collect survey feedback to validate satisfaction.
These strategies ensure OJTech is reliable, user-friendly, and effective for Cebu Institute of Technology University OJT program.


11. Conclusion
11.1 Summary of the Proposal
The OJTech On-the-Job Training (OJT) Management Portal with Job Matching is a web-based platform designed to streamline OJT placement for Computer Studies students at Cebu Institute of Technology University (CITU). By integrating artificial intelligence (AI) and modern web technologies, OJTech automates skills-based job matching, CV management, and real-time monitoring, addressing inefficiencies in traditional OJT processes. The system features a React.tsx frontend hosted on Vercel and a Spring Boot backend on DigitalOcean, supporting 20 concurrent users with a modular, secure architecture. It serves three user groups: students, employers, and administrators, offering personalized job recommendations, efficient recruitment, and comprehensive program oversight, respectively. Partnerships with companies like Alliance Software, Inc. and Kyocera Document Solutions, which have signed OJT agreements with Cebu Institute of Technology University, ensure relevant internship opportunities. The Agile development methodology, robust technical requirements (e.g., MySQL, OAuth 2.0), and rigorous testing strategies (unit, integration, usability) guarantee a reliable platform. Key Performance Indicators (KPIs) such as 99.9% uptime, 80% user adoption, and 70% placement success rate will measure the project's impact. OJTech aims to enhance student employability, streamline employer hiring, and strengthen Cebu Institute of Technology University OJT program, fostering stronger academia-industry linkages in Cebu's technology sector.
11.2 Call to Action
To realize the transformative potential of OJTech, we respectfully request approval and support from the Cebu Institute of Technology University administration, specifically the College of Computer Studies, to proceed with development and deployment. We seek funding to cover infrastructure costs (e.g., DigitalOcean and Vercel hosting), API subscriptions (e.g., Gemini API), and resources for testing and training. Endorsement from faculty and OJT coordinators will facilitate collaboration with industry partners, ensuring alignment with program goals. By supporting OJTech, CITU can enhance its OJT framework, empower students, and strengthen ties with Cebu's tech industry. We invite stakeholders to review this proposal and provide the necessary resources to bring this innovative solution to fruition.


[a]to clarify if " filter's will be done via frontend"
[b]Backend logs